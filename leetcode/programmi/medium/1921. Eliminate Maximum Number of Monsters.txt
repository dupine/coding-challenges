package programmi.medium;
import java.lang.reflect.Array;
import java.lang.Math;
import java.util.*;

class Solution {
    public static int eliminateMaximum(int[] dist, int[] speed) {

        if(dist.length==1) return 1;

        int[] x = new int[dist.length];
        for (int i = 0; i < x.length; i++) {
            x[i] = (int) Math.ceil((double) dist[i] / speed[i]);
            System.out.print((float)dist[i]/(float)speed[i]);
        }

        int r = 1;
        Arrays.sort(x);
        
        for (int i = 1; i < x.length; i++) {
            if(x[i]>i && x[i]>=x[i-1]) {r++;}
            else return r;
        }

        return r;
    }

    public static void main(String[] args){ 
        System.out.println(eliminateMaximum(new int[]{4,8,6,8,2,7,4}, new int[]{1,3,3,1,10,1,1}));
        System.out.println(eliminateMaximum(new int[]{4,2,3}, new int[]{2,1,1}));
        System.out.println(eliminateMaximum(new int[]{3,5,7,4,5}, new int[]{2,3,6,3,2}));
    }
}
